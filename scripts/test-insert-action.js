const io = require('socket.io-client');

console.log('üß™ Testing INSERT Action Handling in Frontend\n');

// Connect to the socket server
const socket = io('http://localhost:3001');

console.log('üîå Connecting to socket server...');

socket.on('connect', () => {
  console.log('‚úÖ Connected to socket server!');
  console.log('üÜî Socket ID:', socket.id);
  
  // Emit authentication (simulate frontend login)
  socket.emit('authenticate', {
    email: 'kyle.p@shoreagents.com',
    userId: 2
  });
  
  console.log('üîê Authentication sent');
  console.log('‚è≥ Waiting for INSERT action notification...');
  console.log('üí° Run this in another terminal to create a new row:');
  console.log('   node scripts/test-new-row-creation.js');
});

socket.on('disconnect', () => {
  console.log('‚ùå Disconnected from socket server');
});

socket.on('connect_error', (error) => {
  console.log('‚ùå Connection error:', error.message);
});

// Listen for real-time activity updates
socket.on('activity-data-updated', (data) => {
  console.log('\nüì° Real-time activity update received!');
  console.log('üìä Update data:', JSON.stringify(data, null, 2));
  
  if (data.action === 'INSERT') {
    console.log('\nüÜï INSERT ACTION DETECTED!');
    console.log('üéØ This should trigger automatic data refresh in the frontend');
    console.log('üìÖ New date:', data.data.today_date);
    console.log('‚è±Ô∏è New timer values:', data.data.today_active_seconds, 's active,', data.data.today_inactive_seconds, 's inactive');
    
    console.log('\nüéâ INSERT action test successful!');
    console.log('‚úÖ Frontend should automatically fetch new data');
    console.log('‚úÖ No page reload needed');
    
    // Disconnect after successful test
    setTimeout(() => {
      socket.disconnect();
      process.exit(0);
    }, 3000);
  } else if (data.action === 'UPDATE') {
    console.log('\nüìù UPDATE ACTION DETECTED');
    console.log('üîÑ This updates existing data in real-time');
  }
  
  console.log('\nüìã Action type:', data.action);
  console.log('üìÖ Date:', data.data.today_date);
  console.log('‚è±Ô∏è Active:', data.data.today_active_seconds, 's');
  console.log('‚è±Ô∏è Inactive:', data.data.today_inactive_seconds, 's');
});

// Listen for other events
socket.on('notification', (data) => {
  console.log('üì¢ Notification received:', data);
});

// Timeout after 30 seconds if no INSERT action
setTimeout(() => {
  console.log('\n‚è∞ Timeout: No INSERT action received');
  console.log('üí° This might mean:');
  console.log('   1. No new rows were created');
  console.log('   2. INSERT notifications are not working');
  console.log('   3. Need to run the row creation test');
  
  socket.disconnect();
  process.exit(1);
}, 30000);

console.log('‚è≥ Waiting for INSERT action...');
console.log('üí° Create a new row in another terminal to test INSERT handling');
